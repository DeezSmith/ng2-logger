{"version":3,"file":"log.js","sourceRoot":"","sources":["../src/log.ts"],"names":[],"mappings":"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","sourcesContent":["import { Logger } from './logger';\r\nimport { Level } from './level';\r\nimport { Display } from './display';\r\n\r\nimport { contain } from './include';\r\n\r\nexport class Log {\r\n\r\n    private static instances: any = {};\r\n\r\n    static create<TA>(name: string, ...level: Level[]): Logger<TA> {\r\n        let i: Logger<TA>;\r\n        if (Log.instances[name] === undefined) {\r\n            i = new Logger<TA>(\r\n                name,\r\n                Log.getRandomColor(),\r\n                Log.isDevelopmentMode,\r\n                level,\r\n                Log.isMutedModule(name),\r\n                Log.levels.length > 0 ? Log.display : undefined,\r\n            );\r\n            Log.instances[name] = i;\r\n        } else {\r\n            i = Log.instances[name];\r\n        }\r\n        return i;\r\n    }\r\n\r\n    private static getRandomColor(): string {\r\n        let letters = '012345'.split('');\r\n        let color = '#';\r\n        color += letters[Math.round(Math.random() * 5)];\r\n        letters = '0123456789ABCDEF'.split('');\r\n        for (let i = 0; i < 5; i++) {\r\n            color += letters[Math.round(Math.random() * 15)];\r\n        }\r\n        if (color === undefined) return this.getRandomColor();\r\n        return color;\r\n    }\r\n\r\n    private static display(name: string, data: any, incomming: Level, moduleName: string) {\r\n        if (!contain(Log.levels, incomming)) return;\r\n        if (incomming === Level.DATA) {\r\n            Display.msg(name, data, name, Log.instances[moduleName].color, Level.DATA);\r\n        }\r\n        if (incomming === Level.ERROR) {\r\n            Display.msg(name, data, name, Log.instances[moduleName].color, Level.ERROR);\r\n        }\r\n        if (incomming === Level.INFO) {\r\n            Display.msg(name, data, name, Log.instances[moduleName].color, Level.INFO);\r\n        }\r\n        if (incomming === Level.WARN) {\r\n            Display.msg(name, data, name, Log.instances[moduleName].color, Level.WARN);\r\n        }\r\n    }\r\n\r\n    private static _logOnly = false;\r\n    private static levels: Level[] = [];\r\n    static onlyLevel(...level: Level[]) {\r\n        if (Log._logOnly) {\r\n            console.error('You should use funcion onlyLevel only once');\r\n            return;\r\n        }\r\n        if (Log._logOnly) Log._logOnly = true;\r\n        if (level.length === 0) return;\r\n        Log.levels = level;\r\n    }\r\n\r\n    private static _logModules = false;\r\n    private static modules: string[] = [];\r\n    static onlyModules(...modules: string[]) {\r\n        if (Log._logModules) {\r\n            console.error('You should use funcion onlyModules only once');\r\n            return;\r\n        }\r\n        if (modules.length === 0) return;\r\n        Log.modules = modules;\r\n        Log.muteAllOtherModules();\r\n    }\r\n    private static isMutedModule(moduleName:string):boolean {\r\n        if(Log.modules.length == 0) return false;\r\n        if(!contain(Log.modules, moduleName)) return true;\r\n        return false;\r\n    }\r\n    private static muteAllOtherModules() {\r\n        for (var moduleName in Log.instances) {\r\n            if(!contain(Log.modules, moduleName))\r\n                Log.instances[moduleName].mute()\r\n        }\r\n    }\r\n\r\n    private static isDevelopmentMode = true;\r\n    private static modeIsSet: boolean = false;\r\n    static setProductionMode() {\r\n        if (Log.modeIsSet) {\r\n            console.error('Mode is already set');\r\n            return;\r\n        }\r\n        if (console !== undefined && console.clear !== undefined) {\r\n            setTimeout(() => {\r\n                console.clear();\r\n                console.log = () => { };\r\n                console.error = () => { };\r\n                console.warn = () => { };\r\n                console.info = () => { };\r\n            });\r\n        }\r\n        Logger.isProductionMode = true;\r\n        Log.isDevelopmentMode = false;\r\n    }\r\n}\r\n"]}